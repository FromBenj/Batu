import mapPin from '../icons/map-pin.svg';

export function servicesMap() {
    if(!document.getElementById('services-map')) {
        return false;
    }

    // Leaflet has native support for raster maps, So you can create a map with a few commands only!
    // The Leaflet map Object
    const map = L.map('services-map').setView([48.7326, 2.16923], 10);

    const services = [
        {
            "type": "Feature",
            "properties": {
                "name": "Coors Field",
                "amenity": "Baseball Stadium",
                "popupContent": "This is where the Rockies play!"
                },
            "geometry": {
                "type": "Point",
                "coordinates": [48.7326, 2.16923]
            }
        },
        {
            "type": "Feature",
            "properties": {
                "name": "Coors Field",
                "amenity": "Baseball Stadium",
                "popupContent": "This is where the Rockies play!"
            },
            "geometry": {
                "type": "Point",
                "coordinates": [48, 2.16923]
            }
        },
    ]

    // The API Key provided is restricted to JSFiddle website
    // Get your own API Key on https://myprojects.geoapify.com
    const myAPIKey = geoapifyApiKey;
    // Retina displays require different mat tiles quality
    const isRetina = L.Browser.retina;

    const baseUrl = "https://maps.geoapify.com/v1/tile/osm-bright/{z}/{x}/{y}.png?apiKey={apiKey}";
    const retinaUrl = "https://maps.geoapify.com/v1/tile/osm-bright/{z}/{x}/{y}@2x.png?apiKey={apiKey}";

    // Add map tiles layer. Set 20 as the maximal zoom and provide map data attribution.
    L.tileLayer(isRetina ? retinaUrl : baseUrl, {
        apiKey: myAPIKey,
        maxZoom: 20,
        id: 'osm-bright',
    }).addTo(map);

    L.geoJSON(services).addTo(map)

    //add a marker with icon generated by Geoapify Marker Icon API
    const markerIcon = L.icon({
        iconUrl: mapPin,
        iconSize: [31, 46], // size of the icon
        iconAnchor: [15.5, 42], // point of the icon which will correspond to marker's location
        popupAnchor: [0, -45] // point from which the popup should open relative to the iconAnchor
    });

    const zooMarkerPopup = L.popup().setContent("This is Munich Zoo");
    const marker1 = L.marker([48.7326, 2.16923], {
        icon: markerIcon
    }).bindPopup(zooMarkerPopup).addTo(map);
    const marker2 = L.marker([48, 2.16923], {
        icon: markerIcon
    }).addTo(map);
}
